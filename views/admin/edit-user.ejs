<!DOCTYPE html>
<html lang="id">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Pengguna - Admin</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      body {
        font-family: "Poppins", sans-serif;
      }
    </style>
  </head>
  <body class="bg-gray-100 p-8">
    <div class="max-w-2xl mx-auto bg-white p-6 rounded-lg shadow-md">
      <div class="mb-4">
        <button onclick="history.back()" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">
          Kembali
        </button>
      </div>
      <h1 class="text-3xl font-bold text-gray-800 mb-6">Edit Pengguna</h1>

      <form id="edit-user-form" class="space-y-4">
        <div>
          <label for="userId" class="block text-sm font-medium text-gray-700">User ID</label>
          <input type="text" id="userId" name="userId" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" readonly>
        </div>
        <div>
          <label for="name" class="block text-sm font-medium text-gray-700">Nama</label>
          <input type="text" id="name" name="name" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
        </div>
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
          <input type="email" id="email" name="email" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
        </div>
        <div>
          <label for="phoneNumber" class="block text-sm font-medium text-gray-700">Nomor Telepon</label>
          <input type="tel" id="phoneNumber" name="phoneNumber" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
        </div>
        <div>
          <label for="gender" class="block text-sm font-medium text-gray-700">Jenis Kelamin</label>
          <select id="gender" name="gender" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
            <option value="">Pilih Jenis Kelamin</option>
            <option value="Laki-laki">Laki-laki</option>
            <option value="Perempuan">Perempuan</option>
            <option value="Lainnya">Lainnya</option>
          </select>
        </div>
        <div>
          <label for="dateOfBirth" class="block text-sm font-medium text-gray-700">Tanggal Lahir</label>
          <input type="date" id="dateOfBirth" name="dateOfBirth" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
        </div>
        <div>
          <label for="role" class="block text-sm font-medium text-gray-700">Role</label>
          <select id="role" name="role" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
            <option value="pembeli">Pembeli</option>
            <option value="penjual">Penjual</option>
            <option value="admin">Admin</option>
          </select>
        </div>
        <div>
          <label for="storeName" class="block text-sm font-medium text-gray-700">Nama Toko</label>
          <input type="text" id="storeName" name="storeName" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
        </div>

        <div id="message" class="mt-4 p-3 rounded-md text-sm font-medium" style="display: none;"></div>

        <button type="submit" class="mt-4 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          Simpan Perubahan
        </button>
      </form>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', async () => {
        const pathSegments = window.location.pathname.split('/');
        const userId = pathSegments[pathSegments.length - 2]; // Get the second to last segment
        const form = document.getElementById('edit-user-form');
        const messageDiv = document.getElementById('message');

        const showMessage = (msg, type) => {
          messageDiv.textContent = msg;
          messageDiv.className = `mt-4 p-3 rounded-md text-sm font-medium ${type === 'success' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}`;
          messageDiv.style.display = 'block';
        };

        // Fetch user data
        try {
          const response = await fetch(`/api/v1/users/${userId}`);

          if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || 'Gagal mengambil data pengguna.');
          }

          const userData = await response.json();
          const user = userData.data.user; // Adjust based on your API response structure

          // Populate form fields
          document.getElementById('userId').value = user.id;
          document.getElementById('name').value = user.name;
          document.getElementById('email').value = user.email;
          document.getElementById('phoneNumber').value = user.phoneNumber || '';
          document.getElementById('gender').value = user.gender || '';
          document.getElementById('dateOfBirth').value = user.dateOfBirth ? new Date(user.dateOfBirth).toISOString().split('T')[0] : '';
          document.getElementById('role').value = user.role;
          document.getElementById('storeName').value = user.storeName || '';

        } catch (error) {
          console.error('Error fetching user data:', error);
          showMessage(`Error: ${error.message}.`, 'error');
        }

        // Handle form submission
        form.addEventListener('submit', async (e) => {
          e.preventDefault();

          const updatedData = {
            name: document.getElementById('name').value,
            email: document.getElementById('email').value,
            phoneNumber: document.getElementById('phoneNumber').value,
            gender: document.getElementById('gender').value,
            dateOfBirth: document.getElementById('dateOfBirth').value,
            role: document.getElementById('role').value,
            storeName: document.getElementById('storeName').value,
          };

          try {
            const response = await fetch(`/api/v1/users/${userId}`, {
              method: 'PATCH',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(updatedData),
            });

            if (!response.ok) {
              const errorData = await response.json();
              throw new Error(errorData.message || 'Gagal memperbarui pengguna.');
            }

            showMessage('Pengguna berhasil diperbarui!', 'success');
            // Optionally redirect back to user list or show updated data
            setTimeout(() => {
              window.location.href = '/dashboard/admin/users';
            }, 2000);

          } catch (error) {
            console.error('Error updating user:', error);
            showMessage(`Error: ${error.message}.`, 'error');
          }
        });
      });
    </script>
  </body>
</html>