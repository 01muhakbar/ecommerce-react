<!DOCTYPE html>
<html lang="id">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Tambah Pengguna Baru</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      body {
        font-family: "Poppins", sans-serif;
      }
    </style>
  </head>
  <body class="bg-gray-100 p-8">
    <div class="max-w-2xl mx-auto bg-white p-6 rounded-lg shadow-md">
      <div class="mb-4">
        <button onclick="history.back()" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">
          Kembali
        </button>
      </div>
      <h1 class="text-3xl font-bold text-gray-800 mb-6">Tambah Pengguna Baru</h1>

      <form id="add-user-form" class="space-y-4">
        <div>
          <label for="name" class="block text-sm font-medium text-gray-700">Nama Lengkap</label>
          <input type="text" id="name" name="name" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
        </div>
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
          <input type="email" id="email" name="email" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
        </div>
        <div>
          <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
          <input type="password" id="password" name="password" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
        </div>
        <div>
          <label for="role" class="block text-sm font-medium text-gray-700">Role</label>
          <select id="role" name="role" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
            <option value="pembeli">Pembeli</option>
            <option value="penjual">Penjual</option>
            <option value="admin">Admin</option>
          </select>
        </div>
        <div id="store-name-group" class="hidden">
          <label for="storeName" class="block text-sm font-medium text-gray-700">Nama Toko (untuk Penjual)</label>
          <input type="text" id="storeName" name="storeName" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
        </div>

        <div id="error-message" class="text-red-600 text-sm font-medium" style="display: none;"></div>
        <div id="success-message" class="text-green-600 text-sm font-medium" style="display: none;"></div>

        <div>
          <button type="submit" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
            Tambah Akun
          </button>
        </div>
      </form>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const roleSelect = document.getElementById('role');
        const storeNameGroup = document.getElementById('store-name-group');
        const addUserForm = document.getElementById('add-user-form');
        const errorMessageDiv = document.getElementById('error-message');
        const successMessageDiv = document.getElementById('success-message');

        roleSelect.addEventListener('change', () => {
          if (roleSelect.value === 'penjual') {
            storeNameGroup.classList.remove('hidden');
          } else {
            storeNameGroup.classList.add('hidden');
          }
        });

        addUserForm.addEventListener('submit', async (event) => {
          event.preventDefault();

          errorMessageDiv.style.display = 'none';
          successMessageDiv.style.display = 'none';

          const name = document.getElementById('name').value;
          const email = document.getElementById('email').value;
          const password = document.getElementById('password').value;
          const role = document.getElementById('role').value;
          const storeName = document.getElementById('storeName').value;

          const userData = { name, email, password, role };
          if (role === 'penjual') {
            userData.storeName = storeName;
          }

          try {
            const response = await fetch('/api/v1/users/create', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(userData),
            });

            const data = await response.json();

            if (!response.ok) {
              errorMessageDiv.textContent = data.message || 'Gagal menambahkan pengguna.';
              errorMessageDiv.style.display = 'block';
              return;
            }

            successMessageDiv.textContent = 'Pengguna berhasil ditambahkan!';
            successMessageDiv.style.display = 'block';
            addUserForm.reset(); // Clear form
            storeNameGroup.classList.add('hidden'); // Hide store name field if it was visible
          } catch (error) {
            console.error('Error adding user:', error);
            errorMessageDiv.textContent = 'Terjadi kesalahan jaringan saat menambahkan pengguna.';
            errorMessageDiv.style.display = 'block';
          }
        });
      });
    </script>
  </body>
</html>